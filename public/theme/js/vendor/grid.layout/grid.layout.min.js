function sc_js() {
    sc_toggleBehaviour(), sc_tabsBehaviour(), sc_accordionBehaviour(), sc_teaserGrid(), sc_carouselBehaviour(), sc_slidersBehaviour(), sc_prettyPhoto(), sc_googleplus(), sc_pinterest(), sc_progress_bar(), sc_plugin_flexslider(), sc_google_fonts(), sc_gridBehaviour(), sc_rowBehaviour(), sc_googleMapsPointer(), sc_ttaActivation(), jQuery(document).trigger("sc_js"), window.setTimeout(sc_waypoints, 500)
}

function getSizeName() {
    var screen_w = jQuery(window).width();
    return screen_w > 1170 ? "desktop_wide" : screen_w > 960 && 1169 > screen_w ? "desktop" : screen_w > 768 && 959 > screen_w ? "tablet" : screen_w > 300 && 767 > screen_w ? "mobile" : 300 > screen_w ? "mobile_portrait" : ""
}

function loadScript(url, $obj, callback) {
    var script = document.createElement("script");
    script.type = "text/javascript", script.readyState && (script.onreadystatechange = function() {
        ("loaded" === script.readyState || "complete" === script.readyState) && (script.onreadystatechange = null, callback())
    }), script.src = url, $obj.get(0).appendChild(script)
}

function sc_ttaActivation() {
    jQuery("[data-sc-accordion]").on("show.sc.accordion", function(e) {
        var $ = window.jQuery,
            ui = {};
        ui.newPanel = $(this).data("sc.accordion").getTarget(), window.prepare_tab_content(e, ui)
    })
}

function sc_accordionActivate(event, ui) {
    if (ui.newPanel.length && ui.newHeader.length) {
        var $pie_charts = ui.newPanel.find(".sc_pie_chart:not(.sc_ready)"),
            $round_charts = ui.newPanel.find(".sc_round-chart"),
            $line_charts = ui.newPanel.find(".sc_line-chart"),
            $carousel = ui.newPanel.find('[data-ride="sc_carousel"]');
        "undefined" != typeof jQuery.fn.isotope && ui.newPanel.find(".isotope, .image_grid_ul").isotope("layout"), ui.newPanel.find(".sc_masonry_media_grid, .sc_masonry_grid").length && ui.newPanel.find(".sc_masonry_media_grid, .sc_masonry_grid").each(function() {
            var grid = jQuery(this).data("scGrid");
            grid && grid.gridBuilder && grid.gridBuilder.setMasonry && grid.gridBuilder.setMasonry()
        }), sc_carouselBehaviour(ui.newPanel), sc_plugin_flexslider(ui.newPanel), $pie_charts.length && jQuery.fn.scChat && $pie_charts.scChat(), $round_charts.length && jQuery.fn.scRoundChart && $round_charts.scRoundChart({
            reload: !1
        }), $line_charts.length && jQuery.fn.scLineChart && $line_charts.scLineChart({
            reload: !1
        }), $carousel.length && jQuery.fn.carousel && $carousel.carousel("resizeAction"), ui.newPanel.parents(".isotope").length && ui.newPanel.parents(".isotope").each(function() {
            jQuery(this).isotope("layout")
        })
    }
}

function initVideoBackgrounds() {
    return window.console && window.console.warn && window.console.warn("this function is deprecated use sc_initVideoBackgrounds"), sc_initVideoBackgrounds()
}

function sc_initVideoBackgrounds() {
    jQuery(".sc_row").each(function() {
        var youtubeUrl, youtubeId, $row = jQuery(this);
        $row.data("scVideoBg") ? (youtubeUrl = $row.data("scVideoBg"), youtubeId = scExtractYoutubeId(youtubeUrl), youtubeId && ($row.find(".sc_video-bg").remove(), insertYoutubeVideoAsBackground($row, youtubeId)), jQuery(window).on("grid:items:added", function(event, $grid) {
            $row.has($grid).length && scResizeVideoBackground($row)
        })) : $row.find(".sc_video-bg").remove()
    })
}

function insertYoutubeVideoAsBackground($element, youtubeId, counter) {
    if ("undefined" == typeof YT.Player) return counter = "undefined" == typeof counter ? 0 : counter, counter > 100 ? void console.warn("Too many attempts to load YouTube api") : void setTimeout(function() {
        insertYoutubeVideoAsBackground($element, youtubeId, counter++)
    }, 100);
    var $container = $element.prepend('<div class="sc_video-bg sc_hidden-xs"><div class="inner"></div></div>').find(".inner");
    new YT.Player($container[0], {
        width: "100%",
        height: "100%",
        videoId: youtubeId,
        playerVars: {
            playlist: youtubeId,
            iv_load_policy: 3,
            enablejsapi: 1,
            disablekb: 1,
            autoplay: 1,
            controls: 0,
            showinfo: 0,
            rel: 0,
            loop: 1,
            wmode: "transparent"
        },
        events: {
            onReady: function(event) {
                event.target.mute().setLoop(!0)
            }
        }
    }), scResizeVideoBackground($element), jQuery(window).bind("resize", function() {
        scResizeVideoBackground($element)
    })
}

function scResizeVideoBackground($element) {
    var iframeW, iframeH, marginLeft, marginTop, containerW = $element.innerWidth(),
        containerH = $element.innerHeight(),
        ratio1 = 16,
        ratio2 = 9;
    ratio1 / ratio2 > containerW / containerH ? (iframeW = containerH * (ratio1 / ratio2), iframeH = containerH, marginLeft = -Math.round((iframeW - containerW) / 2) + "px", marginTop = -Math.round((iframeH - containerH) / 2) + "px", iframeW += "px", iframeH += "px") : (iframeW = containerW, iframeH = containerW * (ratio2 / ratio1), marginTop = -Math.round((iframeH - containerH) / 2) + "px", marginLeft = -Math.round((iframeW - containerW) / 2) + "px", iframeW += "px", iframeH += "px"), $element.find(".sc_video-bg iframe").css({
        maxWidth: "1000%",
        marginLeft: marginLeft,
        marginTop: marginTop,
        width: iframeW,
        height: iframeH
    })
}

function scExtractYoutubeId(url) {
    if ("undefined" == typeof url) return !1;
    var id = url.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);
    return null !== id ? id[1] : !1
}

function sc_googleMapsPointer() {
    var $ = window.jQuery,
        $wpbGmapsWidget = $(".gmaps_widget");
    $wpbGmapsWidget.click(function() {
        $("iframe", this).css("pointer-events", "auto")
    }), $wpbGmapsWidget.mouseleave(function() {
        $("iframe", this).css("pointer-events", "none")
    }), $(".gmaps_widget iframe").css("pointer-events", "none")
}
document.documentElement.className += " js_active ", document.documentElement.className += "ontouchstart" in document.documentElement ? " sc_mobile " : " sc_desktop ",
    function() {
        for (var prefix = ["-webkit-", "-moz-", "-ms-", "-o-", ""], i = 0; i < prefix.length; i++) prefix[i] + "transform" in document.documentElement.style && (document.documentElement.className += " sc_transform ")
    }(), "function" != typeof window.sc_plugin_flexslider && (window.sc_plugin_flexslider = function($parent) {
        var $slider = $parent ? $parent.find(".flexslider") : jQuery(".flexslider");
        $slider.each(function() {
            var this_element = jQuery(this),
                sliderSpeed = 800,
                sliderTimeout = 1e3 * parseInt(this_element.attr("data-interval")),
                sliderFx = this_element.attr("data-flex_fx"),
                slideshow = !0;
            0 === sliderTimeout && (slideshow = !1), this_element.is(":visible") && this_element.flexslider({
                animation: sliderFx,
                slideshow: slideshow,
                slideshowSpeed: sliderTimeout,
                sliderSpeed: sliderSpeed,
                smoothHeight: !0
            })
        })
    }), "function" != typeof window.sc_googleplus && (window.sc_googleplus = function() {
        0 < jQuery(".googleplus").length && ! function() {
            var po = document.createElement("script");
            po.type = "text/javascript", po.async = !0, po.src = "//apis.google.com/js/plusone.js";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(po, s)
        }()
    }), "function" != typeof window.sc_pinterest && (window.sc_pinterest = function() {
        0 < jQuery(".pinterest").length && ! function() {
            var po = document.createElement("script");
            po.type = "text/javascript", po.async = !0, po.src = "//assets.pinterest.com/js/pinit.js";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(po, s)
        }()
    }), "function" != typeof window.sc_progress_bar && (window.sc_progress_bar = function() {
        "undefined" != typeof jQuery.fn.waypoint && jQuery(".sc_progress_bar").waypoint(function() {
            jQuery(this).find(".sc_single_bar").each(function(index) {
                var $this = jQuery(this),
                    bar = $this.find(".sc_bar"),
                    val = bar.data("percentage-value");
                setTimeout(function() {
                    bar.css({
                        width: val + "%"
                    })
                }, 200 * index)
            })
        }, {
            offset: "85%"
        })
    }), "function" != typeof window.sc_waypoints && (window.sc_waypoints = function() {
        "undefined" != typeof jQuery.fn.waypoint && jQuery(".animate_when_almost_visible:not(.start_animation)").waypoint(function() {
            jQuery(this).addClass("start_animation")
        }, {
            offset: "85%"
        })
    }), "function" != typeof window.sc_toggleBehaviour && (window.sc_toggleBehaviour = function($el) {
        function event(e) {
            e && e.preventDefault && e.preventDefault();
            var title = jQuery(this),
                element = title.closest(".sc_toggle"),
                content = element.find(".sc_toggle_content");
            element.hasClass("sc_toggle_active") ? content.slideUp({
                duration: 300,
                complete: function() {
                    element.removeClass("sc_toggle_active")
                }
            }) : content.slideDown({
                duration: 300,
                complete: function() {
                    element.addClass("sc_toggle_active")
                }
            })
        }
        $el ? $el.hasClass("sc_toggle_title") ? $el.unbind("click").click(event) : $el.find(".sc_toggle_title").unbind("click").click(event) : jQuery(".sc_toggle_title").unbind("click").on("click", event)
    }), "function" != typeof window.sc_tabsBehaviour && (window.sc_tabsBehaviour = function($tab) {
        if (jQuery.ui) {
            var $call = $tab || jQuery(".tabs, .tour"),
                ver = jQuery.ui && jQuery.ui.version ? jQuery.ui.version.split(".") : "1.10",
                old_version = 1 === parseInt(ver[0]) && 9 > parseInt(ver[1]);
            $call.each(function(index) {
                var $tabs, interval = jQuery(this).attr("data-interval"),
                    tabs_array = [];
                if ($tabs = jQuery(this).find(".tour_tabs_wrapper").tabs({
                        show: function(event, ui) {
                            prepare_tab_content(event, ui)
                        },
                        beforeActivate: function(event, ui) {
                            1 !== ui.newPanel.index() && ui.newPanel.find(".sc_pie_chart:not(.sc_ready)")
                        },
                        activate: function(event, ui) {
                            prepare_tab_content(event, ui)
                        }
                    }), interval && interval > 0) try {
                    $tabs.tabs("rotate", 1e3 * interval)
                } catch (e) {
                    window.console && window.console.log && console.log(e)
                }
                jQuery(this).find(".tab").each(function() {
                    tabs_array.push(this.id)
                }), jQuery(this).find(".tabs_nav li").click(function(e) {
                    return e.preventDefault(), old_version ? $tabs.tabs("select", jQuery("a", this).attr("href")) : $tabs.tabs("option", "active", jQuery(this).index()), !1
                }), jQuery(this).find(".prev_slide a, .next_slide a").click(function(e) {
                    if (e.preventDefault(), old_version) {
                        var index = $tabs.tabs("option", "selected");
                        jQuery(this).parent().hasClass("next_slide") ? index++ : index--, 0 > index ? index = $tabs.tabs("length") - 1 : index >= $tabs.tabs("length") && (index = 0), $tabs.tabs("select", index)
                    } else {
                        var index = $tabs.tabs("option", "active"),
                            length = $tabs.find(".tab").length;
                        index = jQuery(this).parent().hasClass("next_slide") ? index + 1 >= length ? 0 : index + 1 : 0 > index - 1 ? length - 1 : index - 1, $tabs.tabs("option", "active", index)
                    }
                })
            })
        }
    }), "function" != typeof window.sc_accordionBehaviour && (window.sc_accordionBehaviour = function() {
        jQuery(".accordion").each(function(index) {
            var $tabs, $this = jQuery(this),
                active_tab = ($this.attr("data-interval"), !isNaN(jQuery(this).data("active-tab")) && 0 < parseInt($this.data("active-tab")) ? parseInt($this.data("active-tab")) - 1 : !1),
                collapsible = !1 === active_tab || "yes" === $this.data("collapsible");
            $tabs = $this.find(".accordion_wrapper").accordion({
                header: "> div > h3",
                autoHeight: !1,
                heightStyle: "content",
                active: active_tab,
                collapsible: collapsible,
                navigation: !0,
                activate: sc_accordionActivate,
                change: function(event, ui) {
                    "undefined" != typeof jQuery.fn.isotope && ui.newContent.find(".isotope").isotope("layout"), sc_carouselBehaviour(ui.newPanel)
                }
            }), !0 === $this.data("scDisableKeydown") && ($tabs.data("uiAccordion")._keydown = function() {})
        })
    }), "function" != typeof window.sc_teaserGrid && (window.sc_teaserGrid = function() {
        var layout_modes = {
            fitrows: "fitRows",
            masonry: "masonry"
        };
        jQuery(".grid .teaser_grid_container:not(.carousel), .filtered_grid .teaser_grid_container:not(.carousel)").each(function() {
            var $container = jQuery(this),
                $thumbs = $container.find(".thumbnails"),
                layout_mode = $thumbs.attr("data-layout-mode");
            $thumbs.isotope({
                itemSelector: ".isotope-item",
                layoutMode: "undefined" == typeof layout_modes[layout_mode] ? "fitRows" : layout_modes[layout_mode]
            }), $container.find(".categories_filter a").data("isotope", $thumbs).click(function(e) {
                e.preventDefault();
                var $thumbs = jQuery(this).data("isotope");
                jQuery(this).parent().parent().find(".active").removeClass("active"), jQuery(this).parent().addClass("active"), $thumbs.isotope({
                    filter: jQuery(this).attr("data-filter")
                })
            }), jQuery(window).bind("load resize", function() {
                $thumbs.isotope("layout")
            })
        })
    }), "function" != typeof window.sc_carouselBehaviour && (window.sc_carouselBehaviour = function($parent) {
        var $carousel = $parent ? $parent.find(".carousel") : jQuery(".carousel");
        $carousel.each(function() {
            var $this = jQuery(this);
            if (!0 !== $this.data("carousel_enabled") && $this.is(":visible")) {
                $this.data("carousel_enabled", !0);
                var carousel_speed = (getColumnsCount(jQuery(this)), 500);
                jQuery(this).hasClass("columns_count_1") && (carousel_speed = 900);
                var carousele_li = jQuery(this).find(".thumbnails-fluid li");
                carousele_li.css({
                    "margin-right": carousele_li.css("margin-left"),
                    "margin-left": 0
                });
                var fluid_ul = jQuery(this).find("ul.thumbnails-fluid");
                fluid_ul.width(fluid_ul.width() + 300), jQuery(window).resize(function() {
                    var before_resize = screen_size;
                    screen_size = getSizeName(), before_resize != screen_size && window.setTimeout("location.reload()", 20)
                })
            }
        })
    }), "function" != typeof window.sc_slidersBehaviour && (window.sc_slidersBehaviour = function() {
        jQuery(".gallery_slides").each(function(index) {
            var $imagesGrid, this_element = jQuery(this);
            if (this_element.hasClass("slider_nivo")) {
                var sliderSpeed = 800,
                    sliderTimeout = 1e3 * this_element.attr("data-interval");
                0 === sliderTimeout && (sliderTimeout = 9999999999), this_element.find(".nivoSlider").nivoSlider({
                    effect: "boxRainGrow,boxRain,boxRainReverse,boxRainGrowReverse",
                    slices: 15,
                    boxCols: 8,
                    boxRows: 4,
                    animSpeed: sliderSpeed,
                    pauseTime: sliderTimeout,
                    startSlide: 0,
                    directionNav: !0,
                    directionNavHide: !0,
                    controlNav: !0,
                    keyboardNav: !1,
                    pauseOnHover: !0,
                    manualAdvance: !1,
                    prevText: "Prev",
                    nextText: "Next"
                })
            } else this_element.hasClass("image_grid") && (jQuery.fn.imagesLoaded ? $imagesGrid = this_element.find(".image_grid_ul").imagesLoaded(function() {
                $imagesGrid.isotope({
                    itemSelector: ".isotope-item",
                    layoutMode: "fitRows"
                })
            }) : this_element.find(".image_grid_ul").isotope({
                itemSelector: ".isotope-item",
                layoutMode: "fitRows"
            }))
        })
    }), "function" != typeof window.sc_prettyPhoto && (window.sc_prettyPhoto = function() {
        try {
            jQuery && jQuery.fn && jQuery.fn.prettyPhoto && jQuery('a.prettyphoto, .gallery-icon a[href*=".jpg"]').prettyPhoto({
                animationSpeed: "normal",
                hook: "data-rel",
                padding: 15,
                opacity: .7,
                showTitle: !0,
                allowresize: !0,
                counter_separator_label: "/",
                hideflash: !1,
                deeplinking: !1,
                modal: !1,
                callback: function() {
                    var url = location.href,
                        hashtag = url.indexOf("#!prettyPhoto") ? !0 : !1;
                    hashtag && (location.hash = "")
                },
                social_tools: ""
            })
        } catch (err) {
            window.console && window.console.log && console.log(err)
        }
    }), "function" != typeof window.sc_google_fonts && (window.sc_google_fonts = function() {
        return !1
    }), window.scParallaxSkroll = !1, "function" != typeof window.sc_rowBehaviour && (window.sc_rowBehaviour = function() {
        function fullWidthRow() {
            var $elements = $('[data-sc-full-width="true"]');
            $.each($elements, function(key, item) {
                var $el = $(this);
                $el.addClass("sc_hidden");
                var $el_full = $el.next(".sc_row-full-width");
                if ($el_full.length || ($el_full = $el.parent().next(".sc_row-full-width")), $el_full.length) {
                    var el_margin_left = parseInt($el.css("margin-left"), 10),
                        el_margin_right = parseInt($el.css("margin-right"), 10),
                        offset = 0 - $el_full.offset().left - el_margin_left,
                        width = $(window).width();
                    if ($el.css({
                            position: "relative",
                            left: offset,
                            "box-sizing": "border-box",
                            width: $(window).width()
                        }), !$el.data("scStretchContent")) {
                        var padding = -1 * offset;
                        0 > padding && (padding = 0);
                        var paddingRight = width - padding - $el_full.width() + el_margin_left + el_margin_right;
                        0 > paddingRight && (paddingRight = 0), $el.css({
                            "padding-left": padding + "px",
                            "padding-right": paddingRight + "px"
                        })
                    }
                    $el.attr("data-sc-full-width-init", "true"), $el.removeClass("sc_hidden")
                }
            }), $(document).trigger("sc-full-width-row", $elements)
        }

        function parallaxRow() {
            var scSkrollrOptions, callSkrollInit = !1;
            return window.scParallaxSkroll && window.scParallaxSkroll.destroy(), $(".sc_parallax-inner").remove(), $("[data-5p-top-bottom]").removeAttr("data-5p-top-bottom data-30p-top-bottom"), $("[data-sc-parallax]").each(function() {
                var skrollrSpeed, skrollrSize, skrollrStart, skrollrEnd, $parallaxElement, parallaxImage, youtubeId;
                callSkrollInit = !0, "on" === $(this).data("scParallaxOFade") && $(this).children().attr("data-5p-top-bottom", "opacity:0;").attr("data-30p-top-bottom", "opacity:1;"), skrollrSize = 100 * $(this).data("scParallax"), $parallaxElement = $("<div />").addClass("sc_parallax-inner").appendTo($(this)), $parallaxElement.height(skrollrSize + "%"), parallaxImage = $(this).data("scParallaxImage"), youtubeId = scExtractYoutubeId(parallaxImage), youtubeId ? insertYoutubeVideoAsBackground($parallaxElement, youtubeId) : "undefined" != typeof parallaxImage && $parallaxElement.css("background-image", "url(" + parallaxImage + ")"), skrollrSpeed = skrollrSize - 100, skrollrStart = -skrollrSpeed, skrollrEnd = 0, $parallaxElement.attr("data-bottom-top", "top: " + skrollrStart + "%;").attr("data-top-bottom", "top: " + skrollrEnd + "%;")
            }), callSkrollInit && window.skrollr ? (scSkrollrOptions = {
                forceHeight: !1,
                smoothScrolling: !1,
                mobileCheck: function() {
                    return !1
                }
            }, window.scParallaxSkroll = skrollr.init(scSkrollrOptions), window.scParallaxSkroll) : !1
        }

        function fullHeightRow() {
            var $element = $(".sc_row-o-full-height:first");
            if ($element.length) {
                var $window, windowHeight, offsetTop, fullHeight;
                $window = $(window), windowHeight = $window.height(), offsetTop = $element.offset().top, windowHeight > offsetTop && (fullHeight = 100 - offsetTop / (windowHeight / 100), $element.css("min-height", fullHeight + "vh"))
            }
            $(document).trigger("sc-full-height-row", $element)
        }

        function fixIeFlexbox() {
            var ua = window.navigator.userAgent,
                msie = ua.indexOf("MSIE ");
            (msie > 0 || navigator.userAgent.match(/Trident.*rv\:11\./)) && $(".sc_row-o-full-height").each(function() {
                "flex" === $(this).css("display") && $(this).wrap('<div class="sc_ie-flexbox-fixer"></div>')
            })
        }
        var $ = window.jQuery;
        $(window).off("resize.scRowBehaviour").on("resize.scRowBehaviour", fullWidthRow).on("resize.scRowBehaviour", fullHeightRow), fullWidthRow(), fullHeightRow(), fixIeFlexbox(), sc_initVideoBackgrounds(), parallaxRow()
    }), "function" != typeof window.sc_gridBehaviour && (window.sc_gridBehaviour = function() {
        jQuery.fn.scGrid && jQuery("[data-sc-grid]").scGrid()
    }), "function" != typeof window.getColumnsCount && (window.getColumnsCount = function(el) {
        for (var find = !1, i = 1; !1 === find;) {
            if (el.hasClass("columns_count_" + i)) return find = !0, i;
            i++
        }
    });
var screen_size = getSizeName();
"function" != typeof window.prepare_tab_content && (window.prepare_tab_content = function(event, ui) {
    var $ui_panel, $google_maps, panel = ui.panel || ui.newPanel,
        $pie_charts = panel.find(".sc_pie_chart:not(.sc_ready)"),
        $round_charts = panel.find(".sc_round-chart"),
        $line_charts = panel.find(".sc_line-chart"),
        $carousel = panel.find('[data-ride="sc_carousel"]');
    if (sc_carouselBehaviour(), sc_plugin_flexslider(panel), ui.newPanel.find(".sc_masonry_media_grid, .sc_masonry_grid").length && ui.newPanel.find(".sc_masonry_media_grid, .sc_masonry_grid").each(function() {
            var grid = jQuery(this).data("scGrid");
            grid && grid.gridBuilder && grid.gridBuilder.setMasonry && grid.gridBuilder.setMasonry()
        }), panel.find(".sc_masonry_media_grid, .sc_masonry_grid").length && panel.find(".sc_masonry_media_grid, .sc_masonry_grid").each(function() {
            var grid = jQuery(this).data("scGrid");
            grid && grid.gridBuilder && grid.gridBuilder.setMasonry && grid.gridBuilder.setMasonry()
        }), $pie_charts.length && jQuery.fn.scChat && $pie_charts.scChat(), $round_charts.length && jQuery.fn.scRoundChart && $round_charts.scRoundChart({
            reload: !1
        }), $line_charts.length && jQuery.fn.scLineChart && $line_charts.scLineChart({
            reload: !1
        }), $carousel.length && jQuery.fn.carousel && $carousel.carousel("resizeAction"), $ui_panel = panel.find(".isotope, .image_grid_ul"), $google_maps = panel.find(".gmaps_widget"), 0 < $ui_panel.length && $ui_panel.isotope("layout"), $google_maps.length && !$google_maps.is(".map_ready")) {
        var $frame = $google_maps.find("iframe");
        $frame.attr("src", $frame.attr("src")), $google_maps.addClass("map_ready")
    }
    panel.parents(".isotope").length && panel.parents(".isotope").each(function() {
        jQuery(this).isotope("layout")
    })
}), "function" != typeof window.sc_googleMapsPointer, jQuery(document).ready(function($) {
    window.sc_js()
});